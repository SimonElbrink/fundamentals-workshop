package se.lexicon.simon.workshop.week6.pen.model;

import org.junit.After;
import org.junit.Before;
import org.junit.Test;
import se.lexicon.simon.workshop.week6.pen.dao.PenSequencer;

import static org.junit.Assert.assertEquals;
import static org.junit.Assert.assertTrue;

public class PenTest {

    Pen testObject;

    String brand = "Ballograf";
    String color = "Black";

    @Before
    public void before(){
        testObject = new Pen(brand, color);
    }

    @After
    public void after(){
        PenSequencer.resetCounter();
    }

    @Test
    public void pen_successfully_created(){
        assertTrue(testObject.getId() != 0);
        assertEquals(brand, testObject.getBrand());
        assertEquals(color, testObject.getColor());
    }

    @Test
    public void test_toString(){
        String toString = testObject.toString();

        assertTrue(toString.contains(brand));
        assertTrue(toString.contains(color));
    }

    @Test
    public void test_equals(){
        Pen copyOfTestObject = new Pen(testObject.getId(),testObject.getBrand(),testObject.getColor());

        assertEquals(testObject, copyOfTestObject);
    }
    @Test
    public void test_hashcode(){
        Pen copyOfTestObject = new Pen(testObject.getId(),testObject.getBrand(),testObject.getColor());

        assertEquals(testObject.hashCode(),copyOfTestObject.hashCode());
    }
}